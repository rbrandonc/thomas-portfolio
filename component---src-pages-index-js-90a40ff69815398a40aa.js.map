{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","d","__webpack_exports__","pageQuery","IndexPage","_ref","data","allButterPost","edges","map","_ref2","node","react_default","a","createElement","gatsby_browser_entry","key","id","to","slug","title","layout","seo","keywords","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","color","textDecoration","defaultProps","Layout","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","Fragment","class","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-90a40ff69815398a40aa.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Sidebar from '../components/sidebar'\nimport SEO from '../components/seo'\n\nconst IndexPage = ({ data }) => {\n\n  const posts = data.allButterPost.edges\n    .map(({ node }) => {\n      return <Link key={node.id} to={`/${node.slug}`}>{node.title}</Link>\n    })\n\n  return (\n  <Layout>\n    <SEO title=\"Home\" keywords={[`thomas`, `rushing`, `writing`]} />\n\n    Welcome to Thomas's website. It's not quite done yet :)\n  </Layout>\n)}\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allButterPost {\n      edges {\n        node {\n          id\n          slug\n          title\n        }\n      }\n    }\n  }`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n      <div class='grid'>\n        {children}\n      </div>\n\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}